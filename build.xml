<Project DefaultTargets="build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	
	<Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"/>
	
	<ItemGroup>
		<Solution Include="$(SourceFolder)\Decisions.sln" />		
	</ItemGroup>
		
	<ItemGroup>			
		<TestAssemblies Include="$(BuildFolder)\Decisions.Tests.dll" />	
	</ItemGroup>
	
	<ItemGroup>
		<NuSpec Include="$(SourceFolder)\*.nuspec" />
	</ItemGroup>
	
	<ItemGroup>
		<AssemblyInfo Include="$(SourceFolder)\**\AssemblyInfo.gen.cs" />
	</ItemGroup>
	
	<PropertyGroup>
		<BuildFolder>$(SourceFolder)\Build</BuildFolder>		
		<ReportsFolder>$(SourceFolder)\Build\Reports</ReportsFolder>
		<GallioEcho>C:\program files\gallio\bin\gallio.echo.exe</GallioEcho>
		<NugetTool>C:\Program Files\NuGet\NuGet.exe</NugetTool>
		<NugetPackages>C:\Production\Packages\Feed</NugetPackages>
	</PropertyGroup>
	
	<Target Name="clean">
		<CreateItem Include="$(BuildFolder)\**\*.*">
			<Output TaskParameter="Include" ItemName="OldBuildFiles"/>
		</CreateItem>
		<Delete Files="@(OldBuildFiles)" />
		<RemoveDir Directories="$(BuildFolder)" />
		<MSBuild Projects="@(Solution)" Targets="clean" />
	</Target>
	
	<Target Name="create-build" DependsOnTargets="clean">
		<Message Text="Regenerating Assembly info..." />
		<CallTarget Targets="regenerate-assembly-info" />
	</Target>
	
	<Target Name="regenerate-assembly-info" Outputs="%(AssemblyInfo.Identity)">
		<!-- regenerate the common assembly info for all dlls -->
		<AssemblyInfo
			CodeLanguage="CS"
			OutputFile="%(AssemblyInfo.Identity)"
			AssemblyCompany="CDSM Interactive Solutions"
			AssemblyProduct="My Learning Space Family of Products"
			AssemblyCopyright="Copyright (c) CDSM, 2008-2014"
			/>
			<AssemblyInfo CodeLanguage="CS"
                OutputFile="%(AssemblyInfo.Identity)"
				AssemblyCompany="TruffleMuffin"
				AssemblyCopyright="Copyright (c) TruffleMuffin, 2014"
				AssemblyTitle="Decisions"
				AssemblyDescription="A Claims based model for resolving bespoke authorization/security operations."
		/>
	</Target>
		
	<Target Name="release-build" DependsOnTargets="create-build">
		<MSBuild Projects="@(Solution)" Properties="OutputPath=$(BuildFolder);Configuration=Release" StopOnFirstFailure="true" />
	</Target>
	
	<Target Name="create-reports-folder">
		<Exec Command="rmdir /s /q $(ReportsFolder)" />
		<Exec Command="mkdir $(ReportsFolder)" />
	</Target>
	
	<!-- Target for producing reports for test coverage -->
	<Target Name="coverage" DependsOnTargets="create-reports-folder">
		<!-- Run tests with NCover -->
		<Exec Command="&quot;$(GallioEcho)&quot; @(TestAssemblies, ' ') /runner:IsolatedProcess /runner-property:NCoverCoverageFile='$(ReportsFolder)\CoverageOutput.xml' /report-directory:$(ReportsFolder) /report-type:Html-Condensed /report-name-format:UnitTests /no-echo-results" IgnoreExitCode="true" />
	</Target>
	
	<!-- Create the nuget package(s) -->
	<Target Name="nuget" Outputs="%(NuSpec.Identity)">
		<Exec Command='"$(NugetTool)" pack "%(NuSpec.Identity)" -verbosity normal -outputdirectory "$(NugetPackages)"' />
	</Target>
	
</Project>